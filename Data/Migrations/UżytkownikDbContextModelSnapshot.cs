// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektDaniel.Data;

#nullable disable

namespace ProjektDaniel.Data.Migrations
{
    [DbContext(typeof(UżytkownikDbContext))]
    partial class UżytkownikDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjektDaniel.Models.Rola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("rola");
                });

            modelBuilder.Entity("ProjektDaniel.Models.Użytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IdPrzełożonego")
                        .HasColumnType("int")
                        .HasColumnName("Id_przełożonego");

                    b.Property<int?>("IdRola")
                        .HasColumnType("int")
                        .HasColumnName("Id_rola");

                    b.Property<string>("Imię")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdPrzełożonego");

                    b.HasIndex("IdRola");

                    b.HasIndex(new[] { "Email" }, "UQ__użytkown__A9D10534C7C7CBD8")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("użytkownik");
                });

            modelBuilder.Entity("ProjektDaniel.Models.Wniosek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdOsobyZaakceptował")
                        .HasColumnType("int")
                        .HasColumnName("Id_osoby_zaakceptował");

                    b.Property<int?>("IdOsobyZgłaszającej")
                        .HasColumnType("int")
                        .HasColumnName("Id_osoby_zgłaszającej");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("Plik")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdOsobyZaakceptował");

                    b.HasIndex("IdOsobyZgłaszającej");

                    b.ToTable("wniosek");
                });

            modelBuilder.Entity("ProjektDaniel.Models.Użytkownik", b =>
                {
                    b.HasOne("ProjektDaniel.Models.Użytkownik", "IdPrzełożonegoNavigation")
                        .WithMany("InverseIdPrzełożonegoNavigation")
                        .HasForeignKey("IdPrzełożonego");

                    b.HasOne("ProjektDaniel.Models.Rola", "IdRolaNavigation")
                        .WithMany("Użytkownik")
                        .HasForeignKey("IdRola");

                    b.Navigation("IdPrzełożonegoNavigation");

                    b.Navigation("IdRolaNavigation");
                });

            modelBuilder.Entity("ProjektDaniel.Models.Wniosek", b =>
                {
                    b.HasOne("ProjektDaniel.Models.Użytkownik", "IdOsobyZaakceptowałNavigation")
                        .WithMany("WniosekIdOsobyZaakceptowałNavigation")
                        .HasForeignKey("IdOsobyZaakceptował");

                    b.HasOne("ProjektDaniel.Models.Użytkownik", "IdOsobyZgłaszającejNavigation")
                        .WithMany("WniosekIdOsobyZgłaszającejNavigation")
                        .HasForeignKey("IdOsobyZgłaszającej");

                    b.Navigation("IdOsobyZaakceptowałNavigation");

                    b.Navigation("IdOsobyZgłaszającejNavigation");
                });

            modelBuilder.Entity("ProjektDaniel.Models.Rola", b =>
                {
                    b.Navigation("Użytkownik");
                });

            modelBuilder.Entity("ProjektDaniel.Models.Użytkownik", b =>
                {
                    b.Navigation("InverseIdPrzełożonegoNavigation");

                    b.Navigation("WniosekIdOsobyZaakceptowałNavigation");

                    b.Navigation("WniosekIdOsobyZgłaszającejNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
